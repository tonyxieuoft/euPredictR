% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ParseInput.R
\name{parse_BLAST_json}
\alias{parse_BLAST_json}
\title{Parse JSON-format BLAST output data}
\usage{
parse_BLAST_json(filename, species, raw_blast_list = NULL)
}
\arguments{
\item{filename}{File path of a single BLAST output file in .json format.
Output must be obtained in the context of input query coding sequences and a
set of genomic sequences from a SINGLE species.}

\item{species}{Name of species (string) represented by the set of subject
genomic sequences blasted against. Note that for the ease of the user, gene
names are extracted from query fasta headings rather than provided as a
direct argument}

\item{raw_blast_list}{S3 object of class RawBlastList, which is a nested R list
previously created by this parsing function. Contains raw BLAST output data.
Fill in only if you wish to group two sets of raw data together for
visualization.
The default value is NULL. See the results section below for more
information.}
}
\value{
Returns an S3 object of class RawBlastList, which stores the raw
BLAST output as a nested R list, as follows:
\itemize{
 \item The very outer list is in key-value format where each key is a
 species name and the corresponding value is a "gene list" for the species
 \item Each "gene list" is also in key-value format, where each key is a
 gene name and the  corresponding value is a list containing two attributes:
 1) \emph{hsp_data}, a data frame of high-scoring pairs (HSPs) identified by
 BLAST between the query coding sequence for the gene and subject genomic
 sequences and 2) \emph{query_len}, the length of the query coding sequence
 for the gene.
 \item Each row in \emph{hsp_data} corresponds to a single high-scoring pair,
 in which the columns are as follows:
 \itemize{
   \item \emph{q_start}: start of the HSP segment on the query side.
   \item \emph{q_end}: end of the HSP segment on the query side.
   \item \emph{q_seq}: nucleotide sequence of the HSP segment on the query
   side
   \item \emph{s_start}, \emph{s_end} and \emph{s_seq} are the same, but on
   the subject side.
   \item \emph{s_strand}: The strand of the subject segment (Plus/Minus)
   \item \emph{e_val}: The HSP's e-value
   \item \emph{seq_len}: Length of the HSP
 }
}
If the parameter \emph{raw_blast_list} is not null, then the function adds
the newly curated data to raw_blast_list.
}
\description{
This function facilitates the conversion of a BLAST output file in .json
format (in which the querie(s) are coding sequences and the set of subject
genomic sequences, ie. contigs/scaffolds/chromosomes, are from ONE species
only) into a nested R list data structure. The raw data in this format
serves as input for the build_predictions functions. This function assumes
the following:
\itemize{
 \item That the first word in the fasta heading(s) of the query coding
 sequence(s) is the abbreviated gene name for the query.
 \item That all exons for a gene are located on one genomic sequence, and not
 split between multiple contigs/scaffolds/chromosomes. Exons are generally
 close together and always on the same chromosome, so this should be
 reasonable.
}
}
\examples{

# "orca_rho_BLAST_output.json" contains BLAST output for a rhodopsin query
# coding sequence and subject Orca genome
json_file1 <- system.file("extdata", "orca_rho_BLAST_output.json",
                           package="euPredictR")

# "dolphin_rho_BLAST_output.json" contains BLAST output for a rhodopsin query
# coding sequence and subject dolphin (T. truncatus) genome
json_file2 <- system.file("extdata", "dolphin_rho_BLAST_output.json",
                           package="euPredictR")


# Example 1: Parse BLAST output data with no raw_blast_list input argument

raw_blast_list1 <- parse_BLAST_json(filename = json_file1,
                                     species = "O_orca")


# Example 2: Parse BLAST output data and combine with raw blast list
# generated previously

raw_blast_list2 <- parse_BLAST_json(filename = json_file2,
                                    species = "T_truncatus",
                                    raw_blast_list = raw_blast_list1)
# this list concatenates raw BLAST results for both orca and dolphin RHO
}
\references{
Altschul S.F., Gish, W., Miller, W., Myers, E.W. and Lipman, D.J. (1990). Basic local alignment
search tool. Journal of Molecular Biology 215(3): 403-410.
https://doi.org/10.1016/S0022-2836(05)80360-2

Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A
Grammar of Data Manipulation_. R package version 1.1.4.
https://CRAN.R-project.org/package=dplyr.

Wheeler, D. and Bhagwat, M. Blast QuickStart: Example-Driven Web-Based BLAST
Tutorial. In: Bergman NH, editor. Comparative Genomics: Volumes 1 and 2.
Totowa (NJ): Humana Press; 2007. Chapter 9.
https://www.ncbi.nlm.nih.gov/books/NBK1734/
}
